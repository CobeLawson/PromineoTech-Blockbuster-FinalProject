drop table reviews;
drop table transactions;
drop table products;
drop table video_games;
drop table movies;
drop table genre;
drop table media_type;
drop table customers;
drop table administration;

CREATE TABLE administration (
	administrator_pk int unsigned NOT NULL AUTO_INCREMENT, 
	administrator_name varchar(50) NOT NULL,
	PRIMARY KEY (administrator_pk)
);

CREATE TABLE customers (
	customer_pk int unsigned NOT NULL AUTO_INCREMENT, 
	customer_name varchar(50) NOT NULL,
	customer_age int NOT NULL,
	PRIMARY KEY (customer_pk)
);

CREATE TABLE media_type (
	media_type_pk int unsigned NOT NULL AUTO_INCREMENT, 
	media_type_name varchar(50) NOT NULL,
	PRIMARY KEY (media_type_pk)
);

CREATE TABLE genre (
	genre_pk int unsigned NOT NULL AUTO_INCREMENT, 
	genre_name varchar(50) NOT NULL,
	PRIMARY KEY (genre_pk)
);

CREATE TABLE movies (
	movie_pk int unsigned NOT NULL AUTO_INCREMENT, 
	title varchar(50) NOT NULL,
	price float(4,2),
	media_type_fk int unsigned NOT NULL,
	genre_fk int unsigned NOT NULL,
	PRIMARY KEY (movie_pk),
	FOREIGN KEY (media_type_fk) 
		references media_type (media_type_pk),
	FOREIGN KEY (genre_fk) 
		references genre (genre_pk)
);

CREATE TABLE video_games (
	video_game_pk int unsigned NOT NULL AUTO_INCREMENT, 
	title varchar(50) NOT NULL,
	price float(4,2),
	media_type_fk int unsigned NOT NULL,
	genre_fk int unsigned NOT NULL,
	PRIMARY KEY (video_game_pk),
	FOREIGN KEY (media_type_fk) 
		references media_type (media_type_pk),
	FOREIGN KEY (genre_fk) 
		references genre (genre_pk)
);

create table products as
select m.movie_pk as product_pk, m.title as title, m.price as price, m.media_type_fk as media_type, m.genre_fk as genre
from movies m
union all
select vg.video_game_pk as product_pk, vg.title as title, vg.price as price, vg.media_type_fk as media_type, vg.genre_fk as genre
from video_games vg;

alter table products
add primary key auto_increment (product_pk);

alter table products
add due_dat date;

alter table products
add status varchar(25);


CREATE TABLE transactions (
	transaction_pk int unsigned NOT NULL AUTO_INCREMENT, 
	transaction_date date NOT null,
	due_date date not null,
	price float(5, 2),
	product_list set(''),
	customer_fk int unsigned NOT NULL,
	administrator_fk int unsigned NOT NULL,
	PRIMARY KEY (transaction_pk),
	FOREIGN KEY (customer_fk) 
		references customers (customer_pk),
	FOREIGN KEY (administrator_fk) 
		references administration (administrator_pk)
);


CREATE TABLE reviews (
	review_pk int unsigned NOT NULL AUTO_INCREMENT, 
	review_string varchar(250) NOT NULL,
	movie_fk int unsigned,
	video_game_fk int unsigned,
	customer_fk int unsigned not null,
	PRIMARY KEY (review_pk),
	FOREIGN KEY (movie_fk) 
		references movies (movie_pk) ON DELETE CASCADE,
	FOREIGN KEY (video_game_fk) 
		references video_games (video_game_pk) ON DELETE cascade,
	foreign key (customer_fk) 
		references customers (customer_pk)
);
