package blockbuster.service;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.List;
import java.util.Optional;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import blockbuster.dao.CheckInDao;
import blockbuster.entity.Administrator;
import blockbuster.entity.Customer;
import blockbuster.entity.Movie;
import blockbuster.entity.Product;
import blockbuster.entity.Rental;
import blockbuster.entity.RentalDraft;
import blockbuster.entity.VideoGame;
import jakarta.validation.Valid;
import lombok.extern.slf4j.Slf4j;

@Service
@Slf4j
public class DefaultCheckInService implements CheckInService {
	
	@Autowired
	private CheckInDao checkInDao;

	@Override
	public Rental returnRental(@Valid RentalDraft rentalDraft) {
		log.info("The returnRental method was called with RentalDraft={}", rentalDraft);
		Administrator administrator = getAdministrator(rentalDraft);
		Customer customer = getCustomer(rentalDraft);
		List<Product> products = getProducts(rentalDraft);
		LocalDate date = LocalDate.now();
		LocalDate dueDate = date.plusDays(5);
		BigDecimal price = new BigDecimal("0.0");
		
		for(Product product : products) {
			price = price.add(product.getPrice());
		}
		
		return checkInDao.saveRental(administrator, customer, products, price, date, dueDate);
	}

	private List<Product> getProducts(@Valid RentalDraft rentalDraft) {
		return checkInDao.fetchProducts(rentalDraft.getProduct_list());
	}

	private Customer getCustomer(@Valid RentalDraft rentalDraft) {
		return checkInDao.fetchCustomer(rentalDraft.getCustomer());
	}

	private Administrator getAdministrator(@Valid RentalDraft rentalDraft) {
		return checkInDao.fetchAdministrator(rentalDraft.getAdministrator());
	}

	@Override
	public Optional<Movie> fetchMovieByPK(int moviePK) {
		return checkInDao.fetchMovieByPK(moviePK);
	}

	@Override
	public List<Movie> fetchAllMovies() {
		return checkInDao.fetchAllMovies();
	}

	@Override
	public Optional<VideoGame> fetchVideoGameByPK(int videoGamePK) {
		return checkInDao.fetchVideoGameByPK(videoGamePK);
	}

	@Override
	public List<VideoGame> fetchAllVideoGames() {
		return checkInDao.fetchAllVideoGames();
	}

	@Override
	public Optional<Product> fetchProductByPK(int productPK) {
		return checkInDao.fetchProductByPK(productPK);
	}

	@Override
	public List<Product> fetchAllProducts() {
		return checkInDao.fetchAllProducts();
	}

	@Override
	public Administrator fetchAdministratorByPK(String administrator) {
		return checkInDao.fetchAdministrator(administrator);
	}

	@Override
	public List<Administrator> fetchAllAdministrators() {
		return checkInDao.fetchAllAdministrators();
	}

	@Override
	public Customer fetchCustomerByPK(String customer) {
		return checkInDao.fetchCustomer(customer);
	}

	@Override
	public List<Customer> fetchAllCustomers() {
		return checkInDao.fetchAllCustomers();
	}

}
