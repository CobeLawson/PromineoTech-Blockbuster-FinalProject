package blockbuster.controller;

import org.springframework.http.HttpStatus;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import blockbuster.entity.Rental;
import blockbuster.entity.RentalDraft;
import io.swagger.v3.oas.annotations.OpenAPIDefinition;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.info.Info;
import io.swagger.v3.oas.annotations.parameters.RequestBody;
import io.swagger.v3.oas.annotations.servers.Server;
import jakarta.validation.Valid;


@Validated
@RequestMapping("/reviews")
@OpenAPIDefinition(
		info = @Info(title = "Blockbuster CheckIn Service"), 
		servers = {
				@Server(
						url = "http://localhost:8080", 
						description = "Local server.")})
public interface CheckInController {
	// @formatter:off
  @Operation(
      summary = "Return rented products",
      description = "Returns the selected rented products",
      responses = {
          @ApiResponse(
              responseCode = "201", 
              description = "The selected Rental is returned.", 
              content = @Content(mediaType = "application/json", 
                  schema = @Schema(implementation = Rental.class))),
          @ApiResponse(
              responseCode = "400", 
              description = "The request paramaters are invalid.", 
              content = @Content(mediaType = "application/json")),
          @ApiResponse(
              responseCode = "404", 
              description = "A product was not found with the input criteria.", 
              content = @Content(mediaType = "application/json")),
          @ApiResponse(
              responseCode = "500", description = "An unplanned error occurred.", 
              content = @Content(mediaType = "application/json"))
      },
      parameters = {
          @Parameter(
              name = "RentalRequest",
              required = true,
              description = "The rental as JSON")
      }
  )
  
  //This is the Get Request and associated method call
  @PostMapping
  @ResponseStatus(code = HttpStatus.CREATED)
  Rental returnRental(
  		@Valid
  		@RequestBody RentalDraft rentalDraft);
  // @formatter:on
}
