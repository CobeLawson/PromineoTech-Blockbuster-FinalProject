package com.promineotech.blockbuster.service;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.List;
import java.util.Optional;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.promineotech.blockbuster.dao.CheckInDao;
import com.promineotech.blockbuster.entity.Administrator;
import com.promineotech.blockbuster.entity.Customer;
import com.promineotech.blockbuster.entity.Movie;
import com.promineotech.blockbuster.entity.Product;
import com.promineotech.blockbuster.entity.Rental;
import com.promineotech.blockbuster.entity.RentalRequest;
import com.promineotech.blockbuster.entity.VideoGame;
import jakarta.validation.Valid;
import lombok.extern.slf4j.Slf4j;

@Service
@Slf4j
public class DefaultCheckInService implements CheckInService {
	
	@Autowired
	private CheckInDao checkInDao;

	@Override
	public Rental returnRental(@Valid RentalRequest rentalRequest) {
		log.info("The returnRental method was called with RentalDraft={}", rentalRequest);
		Administrator administrator = getAdministrator(rentalRequest);
		Customer customer = getCustomer(rentalRequest);
		List<Product> productList = getProducts(rentalRequest);
		LocalDate date = LocalDate.now();
		LocalDate dueDate = date.plusDays(5);
		BigDecimal price = new BigDecimal("0.0");
		
		for(Product product : productList) {
			price = price.add(product.getPrice());
		}
		
		return checkInDao.saveRental(administrator, customer, productList, price, date, dueDate);
	}

	private List<Product> getProducts(@Valid RentalRequest rentalRequest) {
		return checkInDao.fetchProducts(rentalRequest.getProductList());
	}

	private Customer getCustomer(@Valid RentalRequest rentalRequest) {
		return checkInDao.fetchCustomer(rentalRequest.getCustomer());
	}

	private Administrator getAdministrator(@Valid RentalRequest rentalRequest) {
		return checkInDao.fetchAdministrator(rentalRequest.getAdministrator());
	}

}
